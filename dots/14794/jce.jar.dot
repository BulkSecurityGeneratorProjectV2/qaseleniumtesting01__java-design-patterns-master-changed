digraph "jce.jar" {
    // Path: C:\Program Files (x86)\Java\jdk1.8.0_121\jre\lib\jce.jar
   "javax.crypto.BadPaddingException"                 -> "java.lang.String";
   "javax.crypto.BadPaddingException"                 -> "java.security.GeneralSecurityException";
   "javax.crypto.Cipher"                              -> "java.lang.AssertionError";
   "javax.crypto.Cipher"                              -> "java.lang.Class";
   "javax.crypto.Cipher"                              -> "java.lang.Exception";
   "javax.crypto.Cipher"                              -> "java.lang.IllegalArgumentException";
   "javax.crypto.Cipher"                              -> "java.lang.IllegalStateException";
   "javax.crypto.Cipher"                              -> "java.lang.NullPointerException";
   "javax.crypto.Cipher"                              -> "java.lang.Object";
   "javax.crypto.Cipher"                              -> "java.lang.RuntimeException";
   "javax.crypto.Cipher"                              -> "java.lang.SecurityException";
   "javax.crypto.Cipher"                              -> "java.lang.String";
   "javax.crypto.Cipher"                              -> "java.lang.StringBuilder";
   "javax.crypto.Cipher"                              -> "java.lang.Throwable";
   "javax.crypto.Cipher"                              -> "java.nio.ByteBuffer";
   "javax.crypto.Cipher"                              -> "java.nio.ReadOnlyBufferException";
   "javax.crypto.Cipher"                              -> "java.security.AlgorithmParameters";
   "javax.crypto.Cipher"                              -> "java.security.InvalidAlgorithmParameterException";
   "javax.crypto.Cipher"                              -> "java.security.InvalidKeyException";
   "javax.crypto.Cipher"                              -> "java.security.InvalidParameterException";
   "javax.crypto.Cipher"                              -> "java.security.Key";
   "javax.crypto.Cipher"                              -> "java.security.NoSuchAlgorithmException";
   "javax.crypto.Cipher"                              -> "java.security.NoSuchProviderException";
   "javax.crypto.Cipher"                              -> "java.security.Permission";
   "javax.crypto.Cipher"                              -> "java.security.Provider";
   "javax.crypto.Cipher"                              -> "java.security.Provider$Service";
   "javax.crypto.Cipher"                              -> "java.security.ProviderException";
   "javax.crypto.Cipher"                              -> "java.security.PublicKey";
   "javax.crypto.Cipher"                              -> "java.security.SecureRandom";
   "javax.crypto.Cipher"                              -> "java.security.Security";
   "javax.crypto.Cipher"                              -> "java.security.cert.Certificate";
   "javax.crypto.Cipher"                              -> "java.security.cert.X509Certificate";
   "javax.crypto.Cipher"                              -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.Cipher"                              -> "java.security.spec.InvalidParameterSpecException";
   "javax.crypto.Cipher"                              -> "java.util.ArrayList";
   "javax.crypto.Cipher"                              -> "java.util.Collections";
   "javax.crypto.Cipher"                              -> "java.util.Iterator";
   "javax.crypto.Cipher"                              -> "java.util.List";
   "javax.crypto.Cipher"                              -> "java.util.Locale";
   "javax.crypto.Cipher"                              -> "java.util.NoSuchElementException";
   "javax.crypto.Cipher"                              -> "java.util.Set";
   "javax.crypto.Cipher"                              -> "java.util.StringTokenizer";
   "javax.crypto.Cipher"                              -> "javax.crypto.BadPaddingException";
   "javax.crypto.Cipher"                              -> "javax.crypto.Cipher$Transform";
   "javax.crypto.Cipher"                              -> "javax.crypto.CipherSpi";
   "javax.crypto.Cipher"                              -> "javax.crypto.CryptoAllPermission";
   "javax.crypto.Cipher"                              -> "javax.crypto.CryptoPermission";
   "javax.crypto.Cipher"                              -> "javax.crypto.ExemptionMechanism";
   "javax.crypto.Cipher"                              -> "javax.crypto.ExemptionMechanismException";
   "javax.crypto.Cipher"                              -> "javax.crypto.IllegalBlockSizeException";
   "javax.crypto.Cipher"                              -> "javax.crypto.JceSecurity";
   "javax.crypto.Cipher"                              -> "javax.crypto.JceSecurityManager";
   "javax.crypto.Cipher"                              -> "javax.crypto.NoSuchPaddingException";
   "javax.crypto.Cipher"                              -> "javax.crypto.NullCipher";
   "javax.crypto.Cipher"                              -> "javax.crypto.ShortBufferException";
   "javax.crypto.Cipher"                              -> "javax.crypto.spec.IvParameterSpec";
   "javax.crypto.Cipher"                              -> "javax.crypto.spec.PBEParameterSpec";
   "javax.crypto.Cipher"                              -> "javax.crypto.spec.RC2ParameterSpec";
   "javax.crypto.Cipher"                              -> "javax.crypto.spec.RC5ParameterSpec";
   "javax.crypto.Cipher"                              -> "sun.security.jca.GetInstance (JDK internal API (rt.jar))";
   "javax.crypto.Cipher"                              -> "sun.security.jca.ServiceId (JDK internal API (rt.jar))";
   "javax.crypto.Cipher"                              -> "sun.security.util.Debug (JDK internal API (rt.jar))";
   "javax.crypto.Cipher$Transform"                    -> "java.lang.CharSequence";
   "javax.crypto.Cipher$Transform"                    -> "java.lang.Math";
   "javax.crypto.Cipher$Transform"                    -> "java.lang.Object";
   "javax.crypto.Cipher$Transform"                    -> "java.lang.String";
   "javax.crypto.Cipher$Transform"                    -> "java.lang.StringBuilder";
   "javax.crypto.Cipher$Transform"                    -> "java.security.NoSuchAlgorithmException";
   "javax.crypto.Cipher$Transform"                    -> "java.security.Provider";
   "javax.crypto.Cipher$Transform"                    -> "java.security.Provider$Service";
   "javax.crypto.Cipher$Transform"                    -> "java.util.Locale";
   "javax.crypto.Cipher$Transform"                    -> "java.util.concurrent.ConcurrentHashMap";
   "javax.crypto.Cipher$Transform"                    -> "java.util.concurrent.ConcurrentMap";
   "javax.crypto.Cipher$Transform"                    -> "java.util.regex.Matcher";
   "javax.crypto.Cipher$Transform"                    -> "java.util.regex.Pattern";
   "javax.crypto.Cipher$Transform"                    -> "javax.crypto.Cipher";
   "javax.crypto.Cipher$Transform"                    -> "javax.crypto.CipherSpi";
   "javax.crypto.Cipher$Transform"                    -> "javax.crypto.NoSuchPaddingException";
   "javax.crypto.CipherInputStream"                   -> "java.io.FilterInputStream";
   "javax.crypto.CipherInputStream"                   -> "java.io.IOException";
   "javax.crypto.CipherInputStream"                   -> "java.io.InputStream";
   "javax.crypto.CipherInputStream"                   -> "java.lang.IllegalStateException";
   "javax.crypto.CipherInputStream"                   -> "java.lang.Object";
   "javax.crypto.CipherInputStream"                   -> "java.lang.System";
   "javax.crypto.CipherInputStream"                   -> "java.lang.Throwable";
   "javax.crypto.CipherInputStream"                   -> "java.security.GeneralSecurityException";
   "javax.crypto.CipherInputStream"                   -> "javax.crypto.BadPaddingException";
   "javax.crypto.CipherInputStream"                   -> "javax.crypto.Cipher";
   "javax.crypto.CipherInputStream"                   -> "javax.crypto.IllegalBlockSizeException";
   "javax.crypto.CipherInputStream"                   -> "javax.crypto.NullCipher";
   "javax.crypto.CipherSpi"                           -> "java.lang.Math";
   "javax.crypto.CipherSpi"                           -> "java.lang.NullPointerException";
   "javax.crypto.CipherSpi"                           -> "java.lang.Object";
   "javax.crypto.CipherSpi"                           -> "java.lang.String";
   "javax.crypto.CipherSpi"                           -> "java.lang.StringBuilder";
   "javax.crypto.CipherSpi"                           -> "java.lang.Throwable";
   "javax.crypto.CipherSpi"                           -> "java.lang.UnsupportedOperationException";
   "javax.crypto.CipherSpi"                           -> "java.nio.Buffer";
   "javax.crypto.CipherSpi"                           -> "java.nio.ByteBuffer";
   "javax.crypto.CipherSpi"                           -> "java.security.AlgorithmParameters";
   "javax.crypto.CipherSpi"                           -> "java.security.InvalidAlgorithmParameterException";
   "javax.crypto.CipherSpi"                           -> "java.security.InvalidKeyException";
   "javax.crypto.CipherSpi"                           -> "java.security.Key";
   "javax.crypto.CipherSpi"                           -> "java.security.NoSuchAlgorithmException";
   "javax.crypto.CipherSpi"                           -> "java.security.ProviderException";
   "javax.crypto.CipherSpi"                           -> "java.security.SecureRandom";
   "javax.crypto.CipherSpi"                           -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.CipherSpi"                           -> "javax.crypto.BadPaddingException";
   "javax.crypto.CipherSpi"                           -> "javax.crypto.IllegalBlockSizeException";
   "javax.crypto.CipherSpi"                           -> "javax.crypto.NoSuchPaddingException";
   "javax.crypto.CipherSpi"                           -> "javax.crypto.ShortBufferException";
   "javax.crypto.CryptoAllPermission"                 -> "java.lang.Object";
   "javax.crypto.CryptoAllPermission"                 -> "java.lang.String";
   "javax.crypto.CryptoAllPermission"                 -> "java.security.Permission";
   "javax.crypto.CryptoAllPermission"                 -> "java.security.PermissionCollection";
   "javax.crypto.CryptoAllPermission"                 -> "javax.crypto.CryptoAllPermissionCollection";
   "javax.crypto.CryptoAllPermission"                 -> "javax.crypto.CryptoPermission";
   "javax.crypto.CryptoAllPermissionCollection"       -> "java.io.Serializable";
   "javax.crypto.CryptoAllPermissionCollection"       -> "java.lang.Object";
   "javax.crypto.CryptoAllPermissionCollection"       -> "java.lang.SecurityException";
   "javax.crypto.CryptoAllPermissionCollection"       -> "java.lang.String";
   "javax.crypto.CryptoAllPermissionCollection"       -> "java.security.Permission";
   "javax.crypto.CryptoAllPermissionCollection"       -> "java.security.PermissionCollection";
   "javax.crypto.CryptoAllPermissionCollection"       -> "java.util.Enumeration";
   "javax.crypto.CryptoAllPermissionCollection"       -> "java.util.Vector";
   "javax.crypto.CryptoAllPermissionCollection"       -> "javax.crypto.CryptoAllPermission";
   "javax.crypto.CryptoAllPermissionCollection"       -> "javax.crypto.CryptoPermission";
   "javax.crypto.CryptoPermission"                    -> "java.lang.Class";
   "javax.crypto.CryptoPermission"                    -> "java.lang.Integer";
   "javax.crypto.CryptoPermission"                    -> "java.lang.Object";
   "javax.crypto.CryptoPermission"                    -> "java.lang.String";
   "javax.crypto.CryptoPermission"                    -> "java.lang.StringBuilder";
   "javax.crypto.CryptoPermission"                    -> "java.security.Permission";
   "javax.crypto.CryptoPermission"                    -> "java.security.PermissionCollection";
   "javax.crypto.CryptoPermission"                    -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.CryptoPermission"                    -> "javax.crypto.CryptoPermissionCollection";
   "javax.crypto.CryptoPermission"                    -> "javax.crypto.spec.PBEParameterSpec";
   "javax.crypto.CryptoPermission"                    -> "javax.crypto.spec.RC2ParameterSpec";
   "javax.crypto.CryptoPermission"                    -> "javax.crypto.spec.RC5ParameterSpec";
   "javax.crypto.CryptoPermissionCollection"          -> "java.io.Serializable";
   "javax.crypto.CryptoPermissionCollection"          -> "java.lang.Object";
   "javax.crypto.CryptoPermissionCollection"          -> "java.lang.SecurityException";
   "javax.crypto.CryptoPermissionCollection"          -> "java.lang.String";
   "javax.crypto.CryptoPermissionCollection"          -> "java.security.Permission";
   "javax.crypto.CryptoPermissionCollection"          -> "java.security.PermissionCollection";
   "javax.crypto.CryptoPermissionCollection"          -> "java.util.Enumeration";
   "javax.crypto.CryptoPermissionCollection"          -> "java.util.Vector";
   "javax.crypto.CryptoPermissionCollection"          -> "javax.crypto.CryptoPermission";
   "javax.crypto.CryptoPermissions"                   -> "java.io.BufferedReader";
   "javax.crypto.CryptoPermissions"                   -> "java.io.IOException";
   "javax.crypto.CryptoPermissions"                   -> "java.io.InputStream";
   "javax.crypto.CryptoPermissions"                   -> "java.io.InputStreamReader";
   "javax.crypto.CryptoPermissions"                   -> "java.io.ObjectInputStream";
   "javax.crypto.CryptoPermissions"                   -> "java.io.ObjectInputStream$GetField";
   "javax.crypto.CryptoPermissions"                   -> "java.io.ObjectOutputStream";
   "javax.crypto.CryptoPermissions"                   -> "java.io.ObjectOutputStream$PutField";
   "javax.crypto.CryptoPermissions"                   -> "java.io.ObjectStreamField";
   "javax.crypto.CryptoPermissions"                   -> "java.io.Reader";
   "javax.crypto.CryptoPermissions"                   -> "java.io.Serializable";
   "javax.crypto.CryptoPermissions"                   -> "java.lang.Class";
   "javax.crypto.CryptoPermissions"                   -> "java.lang.ClassNotFoundException";
   "javax.crypto.CryptoPermissions"                   -> "java.lang.Object";
   "javax.crypto.CryptoPermissions"                   -> "java.lang.SecurityException";
   "javax.crypto.CryptoPermissions"                   -> "java.lang.String";
   "javax.crypto.CryptoPermissions"                   -> "java.security.Permission";
   "javax.crypto.CryptoPermissions"                   -> "java.security.PermissionCollection";
   "javax.crypto.CryptoPermissions"                   -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.CryptoPermissions"                   -> "java.util.Enumeration";
   "javax.crypto.CryptoPermissions"                   -> "java.util.Hashtable";
   "javax.crypto.CryptoPermissions"                   -> "java.util.Map";
   "javax.crypto.CryptoPermissions"                   -> "java.util.Vector";
   "javax.crypto.CryptoPermissions"                   -> "java.util.concurrent.ConcurrentHashMap";
   "javax.crypto.CryptoPermissions"                   -> "javax.crypto.CryptoAllPermission";
   "javax.crypto.CryptoPermissions"                   -> "javax.crypto.CryptoPermission";
   "javax.crypto.CryptoPermissions"                   -> "javax.crypto.CryptoPolicyParser";
   "javax.crypto.CryptoPermissions"                   -> "javax.crypto.CryptoPolicyParser$ParsingException";
   "javax.crypto.CryptoPermissions"                   -> "javax.crypto.PermissionsEnumerator";
   "javax.crypto.CryptoPolicyParser"                  -> "java.io.BufferedReader";
   "javax.crypto.CryptoPolicyParser"                  -> "java.io.IOException";
   "javax.crypto.CryptoPolicyParser"                  -> "java.io.Reader";
   "javax.crypto.CryptoPolicyParser"                  -> "java.io.StreamTokenizer";
   "javax.crypto.CryptoPolicyParser"                  -> "java.lang.Class";
   "javax.crypto.CryptoPolicyParser"                  -> "java.lang.Exception";
   "javax.crypto.CryptoPolicyParser"                  -> "java.lang.Integer";
   "javax.crypto.CryptoPolicyParser"                  -> "java.lang.Object";
   "javax.crypto.CryptoPolicyParser"                  -> "java.lang.String";
   "javax.crypto.CryptoPolicyParser"                  -> "java.lang.StringBuilder";
   "javax.crypto.CryptoPolicyParser"                  -> "java.lang.reflect.Constructor";
   "javax.crypto.CryptoPolicyParser"                  -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.CryptoPolicyParser"                  -> "java.util.Enumeration";
   "javax.crypto.CryptoPolicyParser"                  -> "java.util.Hashtable";
   "javax.crypto.CryptoPolicyParser"                  -> "java.util.Locale";
   "javax.crypto.CryptoPolicyParser"                  -> "java.util.Vector";
   "javax.crypto.CryptoPolicyParser"                  -> "javax.crypto.CryptoAllPermission";
   "javax.crypto.CryptoPolicyParser"                  -> "javax.crypto.CryptoPermission";
   "javax.crypto.CryptoPolicyParser"                  -> "javax.crypto.CryptoPolicyParser$CryptoPermissionEntry";
   "javax.crypto.CryptoPolicyParser"                  -> "javax.crypto.CryptoPolicyParser$GrantEntry";
   "javax.crypto.CryptoPolicyParser"                  -> "javax.crypto.CryptoPolicyParser$ParsingException";
   "javax.crypto.CryptoPolicyParser$CryptoPermissionEntry" -> "java.lang.Object";
   "javax.crypto.CryptoPolicyParser$CryptoPermissionEntry" -> "java.lang.String";
   "javax.crypto.CryptoPolicyParser$CryptoPermissionEntry" -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.CryptoPolicyParser$CryptoPermissionEntry" -> "javax.crypto.CryptoPolicyParser";
   "javax.crypto.CryptoPolicyParser$GrantEntry"       -> "java.lang.Object";
   "javax.crypto.CryptoPolicyParser$GrantEntry"       -> "java.util.Enumeration";
   "javax.crypto.CryptoPolicyParser$GrantEntry"       -> "java.util.Vector";
   "javax.crypto.CryptoPolicyParser$GrantEntry"       -> "javax.crypto.CryptoPolicyParser";
   "javax.crypto.CryptoPolicyParser$GrantEntry"       -> "javax.crypto.CryptoPolicyParser$CryptoPermissionEntry";
   "javax.crypto.CryptoPolicyParser$ParsingException" -> "java.lang.String";
   "javax.crypto.CryptoPolicyParser$ParsingException" -> "java.lang.StringBuilder";
   "javax.crypto.CryptoPolicyParser$ParsingException" -> "java.security.GeneralSecurityException";
   "javax.crypto.CryptoPolicyParser$ParsingException" -> "javax.crypto.CryptoPolicyParser";
   "javax.crypto.ExemptionMechanism"                  -> "java.lang.Class";
   "javax.crypto.ExemptionMechanism"                  -> "java.lang.IllegalArgumentException";
   "javax.crypto.ExemptionMechanism"                  -> "java.lang.IllegalStateException";
   "javax.crypto.ExemptionMechanism"                  -> "java.lang.Object";
   "javax.crypto.ExemptionMechanism"                  -> "java.lang.String";
   "javax.crypto.ExemptionMechanism"                  -> "java.security.AlgorithmParameters";
   "javax.crypto.ExemptionMechanism"                  -> "java.security.InvalidAlgorithmParameterException";
   "javax.crypto.ExemptionMechanism"                  -> "java.security.InvalidKeyException";
   "javax.crypto.ExemptionMechanism"                  -> "java.security.Key";
   "javax.crypto.ExemptionMechanism"                  -> "java.security.NoSuchAlgorithmException";
   "javax.crypto.ExemptionMechanism"                  -> "java.security.NoSuchProviderException";
   "javax.crypto.ExemptionMechanism"                  -> "java.security.Provider";
   "javax.crypto.ExemptionMechanism"                  -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.ExemptionMechanism"                  -> "javax.crypto.ExemptionMechanismException";
   "javax.crypto.ExemptionMechanism"                  -> "javax.crypto.ExemptionMechanismSpi";
   "javax.crypto.ExemptionMechanism"                  -> "javax.crypto.JceSecurity";
   "javax.crypto.ExemptionMechanism"                  -> "javax.crypto.ShortBufferException";
   "javax.crypto.ExemptionMechanism"                  -> "sun.security.jca.GetInstance (JDK internal API (rt.jar))";
   "javax.crypto.ExemptionMechanism"                  -> "sun.security.jca.GetInstance$Instance (JDK internal API (rt.jar))";
   "javax.crypto.ExemptionMechanismException"         -> "java.lang.String";
   "javax.crypto.ExemptionMechanismException"         -> "java.security.GeneralSecurityException";
   "javax.crypto.ExemptionMechanismSpi"               -> "java.lang.Object";
   "javax.crypto.ExemptionMechanismSpi"               -> "java.security.AlgorithmParameters";
   "javax.crypto.ExemptionMechanismSpi"               -> "java.security.InvalidAlgorithmParameterException";
   "javax.crypto.ExemptionMechanismSpi"               -> "java.security.InvalidKeyException";
   "javax.crypto.ExemptionMechanismSpi"               -> "java.security.Key";
   "javax.crypto.ExemptionMechanismSpi"               -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.ExemptionMechanismSpi"               -> "javax.crypto.ExemptionMechanismException";
   "javax.crypto.ExemptionMechanismSpi"               -> "javax.crypto.ShortBufferException";
   "javax.crypto.IllegalBlockSizeException"           -> "java.lang.String";
   "javax.crypto.IllegalBlockSizeException"           -> "java.security.GeneralSecurityException";
   "javax.crypto.JarVerifier"                         -> "java.io.BufferedInputStream";
   "javax.crypto.JarVerifier"                         -> "java.io.ByteArrayInputStream";
   "javax.crypto.JarVerifier"                         -> "java.io.File";
   "javax.crypto.JarVerifier"                         -> "java.io.IOException";
   "javax.crypto.JarVerifier"                         -> "java.io.InputStream";
   "javax.crypto.JarVerifier"                         -> "java.lang.Exception";
   "javax.crypto.JarVerifier"                         -> "java.lang.InternalError";
   "javax.crypto.JarVerifier"                         -> "java.lang.Object";
   "javax.crypto.JarVerifier"                         -> "java.lang.Runtime";
   "javax.crypto.JarVerifier"                         -> "java.lang.SecurityException";
   "javax.crypto.JarVerifier"                         -> "java.lang.String";
   "javax.crypto.JarVerifier"                         -> "java.lang.StringBuilder";
   "javax.crypto.JarVerifier"                         -> "java.lang.System";
   "javax.crypto.JarVerifier"                         -> "java.lang.Throwable";
   "javax.crypto.JarVerifier"                         -> "java.net.MalformedURLException";
   "javax.crypto.JarVerifier"                         -> "java.net.NetworkInterface";
   "javax.crypto.JarVerifier"                         -> "java.net.URL";
   "javax.crypto.JarVerifier"                         -> "java.nio.file.DirectoryStream";
   "javax.crypto.JarVerifier"                         -> "java.nio.file.Files";
   "javax.crypto.JarVerifier"                         -> "java.nio.file.Path";
   "javax.crypto.JarVerifier"                         -> "java.security.AccessController";
   "javax.crypto.JarVerifier"                         -> "java.security.InvalidKeyException";
   "javax.crypto.JarVerifier"                         -> "java.security.MessageDigest";
   "javax.crypto.JarVerifier"                         -> "java.security.NoSuchAlgorithmException";
   "javax.crypto.JarVerifier"                         -> "java.security.NoSuchProviderException";
   "javax.crypto.JarVerifier"                         -> "java.security.Principal";
   "javax.crypto.JarVerifier"                         -> "java.security.PrivilegedActionException";
   "javax.crypto.JarVerifier"                         -> "java.security.PrivilegedExceptionAction";
   "javax.crypto.JarVerifier"                         -> "java.security.PublicKey";
   "javax.crypto.JarVerifier"                         -> "java.security.SignatureException";
   "javax.crypto.JarVerifier"                         -> "java.security.cert.Certificate";
   "javax.crypto.JarVerifier"                         -> "java.security.cert.CertificateException";
   "javax.crypto.JarVerifier"                         -> "java.security.cert.CertificateFactory";
   "javax.crypto.JarVerifier"                         -> "java.security.cert.X509Certificate";
   "javax.crypto.JarVerifier"                         -> "java.util.ArrayList";
   "javax.crypto.JarVerifier"                         -> "java.util.Collections";
   "javax.crypto.JarVerifier"                         -> "java.util.Enumeration";
   "javax.crypto.JarVerifier"                         -> "java.util.Iterator";
   "javax.crypto.JarVerifier"                         -> "java.util.List";
   "javax.crypto.JarVerifier"                         -> "java.util.Properties";
   "javax.crypto.JarVerifier"                         -> "java.util.Random";
   "javax.crypto.JarVerifier"                         -> "java.util.Set";
   "javax.crypto.JarVerifier"                         -> "java.util.jar.Attributes";
   "javax.crypto.JarVerifier"                         -> "java.util.jar.Attributes$Name";
   "javax.crypto.JarVerifier"                         -> "java.util.jar.JarEntry";
   "javax.crypto.JarVerifier"                         -> "java.util.jar.JarException";
   "javax.crypto.JarVerifier"                         -> "java.util.jar.JarFile";
   "javax.crypto.JarVerifier"                         -> "java.util.jar.Manifest";
   "javax.crypto.JarVerifier"                         -> "java.util.zip.ZipEntry";
   "javax.crypto.JarVerifier"                         -> "javax.crypto.CryptoPermissions";
   "javax.crypto.JarVerifier"                         -> "javax.crypto.CryptoPolicyParser";
   "javax.crypto.JarVerifier"                         -> "javax.crypto.CryptoPolicyParser$ParsingException";
   "javax.crypto.JarVerifier"                         -> "javax.crypto.JarVerifier$1";
   "javax.crypto.JarVerifier"                         -> "javax.crypto.JarVerifier$2";
   "javax.crypto.JarVerifier"                         -> "javax.crypto.JarVerifier$JarHolder";
   "javax.crypto.JarVerifier"                         -> "sun.security.validator.Validator (JDK internal API (rt.jar))";
   "javax.crypto.JarVerifier$1"                       -> "java.lang.Exception";
   "javax.crypto.JarVerifier$1"                       -> "java.lang.Object";
   "javax.crypto.JarVerifier$1"                       -> "java.lang.String";
   "javax.crypto.JarVerifier$1"                       -> "java.lang.Void";
   "javax.crypto.JarVerifier$1"                       -> "java.security.PrivilegedExceptionAction";
   "javax.crypto.JarVerifier$1"                       -> "java.security.cert.CertificateFactory";
   "javax.crypto.JarVerifier$1"                       -> "java.security.cert.X509Certificate";
   "javax.crypto.JarVerifier$1"                       -> "java.util.Arrays";
   "javax.crypto.JarVerifier$1"                       -> "java.util.Collection";
   "javax.crypto.JarVerifier$1"                       -> "java.util.List";
   "javax.crypto.JarVerifier$1"                       -> "javax.crypto.JarVerifier";
   "javax.crypto.JarVerifier$1"                       -> "sun.security.validator.Validator (JDK internal API (rt.jar))";
   "javax.crypto.JarVerifier$2"                       -> "java.lang.Class";
   "javax.crypto.JarVerifier$2"                       -> "java.lang.Exception";
   "javax.crypto.JarVerifier$2"                       -> "java.lang.Object";
   "javax.crypto.JarVerifier$2"                       -> "java.lang.String";
   "javax.crypto.JarVerifier$2"                       -> "java.net.JarURLConnection";
   "javax.crypto.JarVerifier$2"                       -> "java.net.URL";
   "javax.crypto.JarVerifier$2"                       -> "java.net.URLConnection";
   "javax.crypto.JarVerifier$2"                       -> "java.security.PrivilegedExceptionAction";
   "javax.crypto.JarVerifier$2"                       -> "java.util.jar.JarFile";
   "javax.crypto.JarVerifier$2"                       -> "javax.crypto.JarVerifier";
   "javax.crypto.JarVerifier$2"                       -> "javax.crypto.JarVerifier$JarHolder";
   "javax.crypto.JarVerifier$JarHolder"               -> "java.lang.Object";
   "javax.crypto.JarVerifier$JarHolder"               -> "java.util.jar.JarFile";
   "javax.crypto.JarVerifier$JarHolder"               -> "javax.crypto.JarVerifier";
   "javax.crypto.JceSecurity"                         -> "java.io.File";
   "javax.crypto.JceSecurity"                         -> "java.io.InputStream";
   "javax.crypto.JceSecurity"                         -> "java.lang.Boolean";
   "javax.crypto.JceSecurity"                         -> "java.lang.Class";
   "javax.crypto.JceSecurity"                         -> "java.lang.ClassLoader";
   "javax.crypto.JceSecurity"                         -> "java.lang.Exception";
   "javax.crypto.JceSecurity"                         -> "java.lang.Object";
   "javax.crypto.JceSecurity"                         -> "java.lang.RuntimeException";
   "javax.crypto.JceSecurity"                         -> "java.lang.SecurityException";
   "javax.crypto.JceSecurity"                         -> "java.lang.String";
   "javax.crypto.JceSecurity"                         -> "java.lang.StringBuilder";
   "javax.crypto.JceSecurity"                         -> "java.lang.System";
   "javax.crypto.JceSecurity"                         -> "java.lang.Throwable";
   "javax.crypto.JceSecurity"                         -> "java.net.URL";
   "javax.crypto.JceSecurity"                         -> "java.security.AccessController";
   "javax.crypto.JceSecurity"                         -> "java.security.NoSuchAlgorithmException";
   "javax.crypto.JceSecurity"                         -> "java.security.NoSuchProviderException";
   "javax.crypto.JceSecurity"                         -> "java.security.Permission";
   "javax.crypto.JceSecurity"                         -> "java.security.PrivilegedAction";
   "javax.crypto.JceSecurity"                         -> "java.security.PrivilegedExceptionAction";
   "javax.crypto.JceSecurity"                         -> "java.security.Provider";
   "javax.crypto.JceSecurity"                         -> "java.security.Provider$Service";
   "javax.crypto.JceSecurity"                         -> "java.security.SecureRandom";
   "javax.crypto.JceSecurity"                         -> "java.security.cert.Certificate";
   "javax.crypto.JceSecurity"                         -> "java.util.Enumeration";
   "javax.crypto.JceSecurity"                         -> "java.util.IdentityHashMap";
   "javax.crypto.JceSecurity"                         -> "java.util.Iterator";
   "javax.crypto.JceSecurity"                         -> "java.util.List";
   "javax.crypto.JceSecurity"                         -> "java.util.Map";
   "javax.crypto.JceSecurity"                         -> "java.util.WeakHashMap";
   "javax.crypto.JceSecurity"                         -> "java.util.jar.JarEntry";
   "javax.crypto.JceSecurity"                         -> "java.util.jar.JarFile";
   "javax.crypto.JceSecurity"                         -> "java.util.zip.ZipEntry";
   "javax.crypto.JceSecurity"                         -> "javax.crypto.CryptoAllPermission";
   "javax.crypto.JceSecurity"                         -> "javax.crypto.CryptoPermissions";
   "javax.crypto.JceSecurity"                         -> "javax.crypto.JarVerifier";
   "javax.crypto.JceSecurity"                         -> "javax.crypto.JceSecurity$1";
   "javax.crypto.JceSecurity"                         -> "javax.crypto.JceSecurity$2";
   "javax.crypto.JceSecurity"                         -> "sun.security.jca.GetInstance (JDK internal API (rt.jar))";
   "javax.crypto.JceSecurity"                         -> "sun.security.jca.GetInstance$Instance (JDK internal API (rt.jar))";
   "javax.crypto.JceSecurity$1"                       -> "java.lang.Exception";
   "javax.crypto.JceSecurity$1"                       -> "java.lang.Object";
   "javax.crypto.JceSecurity$1"                       -> "java.security.PrivilegedExceptionAction";
   "javax.crypto.JceSecurity$1"                       -> "javax.crypto.JceSecurity";
   "javax.crypto.JceSecurity$2"                       -> "java.lang.Class";
   "javax.crypto.JceSecurity$2"                       -> "java.lang.Object";
   "javax.crypto.JceSecurity$2"                       -> "java.net.URL";
   "javax.crypto.JceSecurity$2"                       -> "java.security.CodeSource";
   "javax.crypto.JceSecurity$2"                       -> "java.security.PrivilegedAction";
   "javax.crypto.JceSecurity$2"                       -> "java.security.ProtectionDomain";
   "javax.crypto.JceSecurity$2"                       -> "javax.crypto.JceSecurity";
   "javax.crypto.JceSecurityManager"                  -> "java.lang.Class";
   "javax.crypto.JceSecurityManager"                  -> "java.lang.Exception";
   "javax.crypto.JceSecurityManager"                  -> "java.lang.Object";
   "javax.crypto.JceSecurityManager"                  -> "java.lang.SecurityManager";
   "javax.crypto.JceSecurityManager"                  -> "java.lang.String";
   "javax.crypto.JceSecurityManager"                  -> "java.lang.Throwable";
   "javax.crypto.JceSecurityManager"                  -> "java.net.URL";
   "javax.crypto.JceSecurityManager"                  -> "java.security.AccessController";
   "javax.crypto.JceSecurityManager"                  -> "java.security.Permission";
   "javax.crypto.JceSecurityManager"                  -> "java.security.PermissionCollection";
   "javax.crypto.JceSecurityManager"                  -> "java.security.PrivilegedAction";
   "javax.crypto.JceSecurityManager"                  -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.JceSecurityManager"                  -> "java.util.Enumeration";
   "javax.crypto.JceSecurityManager"                  -> "java.util.Locale";
   "javax.crypto.JceSecurityManager"                  -> "java.util.Vector";
   "javax.crypto.JceSecurityManager"                  -> "java.util.concurrent.ConcurrentHashMap";
   "javax.crypto.JceSecurityManager"                  -> "java.util.concurrent.ConcurrentMap";
   "javax.crypto.JceSecurityManager"                  -> "javax.crypto.CryptoAllPermission";
   "javax.crypto.JceSecurityManager"                  -> "javax.crypto.CryptoPermission";
   "javax.crypto.JceSecurityManager"                  -> "javax.crypto.CryptoPermissions";
   "javax.crypto.JceSecurityManager"                  -> "javax.crypto.ExemptionMechanism";
   "javax.crypto.JceSecurityManager"                  -> "javax.crypto.JceSecurity";
   "javax.crypto.JceSecurityManager"                  -> "javax.crypto.JceSecurityManager$1";
   "javax.crypto.JceSecurityManager$1"                -> "java.lang.Object";
   "javax.crypto.JceSecurityManager$1"                -> "java.security.PrivilegedAction";
   "javax.crypto.JceSecurityManager$1"                -> "javax.crypto.JceSecurityManager";
   "javax.crypto.KeyGenerator"                        -> "java.lang.AssertionError";
   "javax.crypto.KeyGenerator"                        -> "java.lang.Class";
   "javax.crypto.KeyGenerator"                        -> "java.lang.Exception";
   "javax.crypto.KeyGenerator"                        -> "java.lang.Object";
   "javax.crypto.KeyGenerator"                        -> "java.lang.RuntimeException";
   "javax.crypto.KeyGenerator"                        -> "java.lang.String";
   "javax.crypto.KeyGenerator"                        -> "java.lang.StringBuilder";
   "javax.crypto.KeyGenerator"                        -> "java.lang.Throwable";
   "javax.crypto.KeyGenerator"                        -> "java.security.InvalidAlgorithmParameterException";
   "javax.crypto.KeyGenerator"                        -> "java.security.NoSuchAlgorithmException";
   "javax.crypto.KeyGenerator"                        -> "java.security.NoSuchProviderException";
   "javax.crypto.KeyGenerator"                        -> "java.security.Provider";
   "javax.crypto.KeyGenerator"                        -> "java.security.Provider$Service";
   "javax.crypto.KeyGenerator"                        -> "java.security.SecureRandom";
   "javax.crypto.KeyGenerator"                        -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.KeyGenerator"                        -> "java.util.Iterator";
   "javax.crypto.KeyGenerator"                        -> "java.util.List";
   "javax.crypto.KeyGenerator"                        -> "javax.crypto.JceSecurity";
   "javax.crypto.KeyGenerator"                        -> "javax.crypto.KeyGeneratorSpi";
   "javax.crypto.KeyGenerator"                        -> "javax.crypto.SecretKey";
   "javax.crypto.KeyGenerator"                        -> "sun.security.jca.GetInstance (JDK internal API (rt.jar))";
   "javax.crypto.KeyGenerator"                        -> "sun.security.jca.GetInstance$Instance (JDK internal API (rt.jar))";
   "javax.crypto.KeyGenerator"                        -> "sun.security.util.Debug (JDK internal API (rt.jar))";
   "javax.crypto.KeyGeneratorSpi"                     -> "java.lang.Object";
   "javax.crypto.KeyGeneratorSpi"                     -> "java.security.InvalidAlgorithmParameterException";
   "javax.crypto.KeyGeneratorSpi"                     -> "java.security.SecureRandom";
   "javax.crypto.KeyGeneratorSpi"                     -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.KeyGeneratorSpi"                     -> "javax.crypto.SecretKey";
   "javax.crypto.NoSuchPaddingException"              -> "java.lang.String";
   "javax.crypto.NoSuchPaddingException"              -> "java.security.GeneralSecurityException";
   "javax.crypto.NullCipher"                          -> "java.lang.String";
   "javax.crypto.NullCipher"                          -> "javax.crypto.Cipher";
   "javax.crypto.NullCipher"                          -> "javax.crypto.CipherSpi";
   "javax.crypto.NullCipher"                          -> "javax.crypto.NullCipherSpi";
   "javax.crypto.NullCipherSpi"                       -> "java.lang.Object";
   "javax.crypto.NullCipherSpi"                       -> "java.lang.String";
   "javax.crypto.NullCipherSpi"                       -> "java.lang.System";
   "javax.crypto.NullCipherSpi"                       -> "java.security.AlgorithmParameters";
   "javax.crypto.NullCipherSpi"                       -> "java.security.Key";
   "javax.crypto.NullCipherSpi"                       -> "java.security.SecureRandom";
   "javax.crypto.NullCipherSpi"                       -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.NullCipherSpi"                       -> "javax.crypto.CipherSpi";
   "javax.crypto.PermissionsEnumerator"               -> "java.lang.Object";
   "javax.crypto.PermissionsEnumerator"               -> "java.lang.String";
   "javax.crypto.PermissionsEnumerator"               -> "java.security.Permission";
   "javax.crypto.PermissionsEnumerator"               -> "java.security.PermissionCollection";
   "javax.crypto.PermissionsEnumerator"               -> "java.util.Enumeration";
   "javax.crypto.PermissionsEnumerator"               -> "java.util.NoSuchElementException";
   "javax.crypto.SecretKey"                           -> "java.lang.Object";
   "javax.crypto.SecretKey"                           -> "java.security.Key";
   "javax.crypto.SecretKey"                           -> "javax.security.auth.Destroyable";
   "javax.crypto.ShortBufferException"                -> "java.lang.String";
   "javax.crypto.ShortBufferException"                -> "java.security.GeneralSecurityException";
   "javax.crypto.interfaces.DHKey"                    -> "java.lang.Object";
   "javax.crypto.interfaces.DHKey"                    -> "javax.crypto.spec.DHParameterSpec";
   "javax.crypto.interfaces.DHPublicKey"              -> "java.lang.Object";
   "javax.crypto.interfaces.DHPublicKey"              -> "java.math.BigInteger";
   "javax.crypto.interfaces.DHPublicKey"              -> "java.security.PublicKey";
   "javax.crypto.interfaces.DHPublicKey"              -> "javax.crypto.interfaces.DHKey";
   "javax.crypto.spec.DHParameterSpec"                -> "java.lang.Object";
   "javax.crypto.spec.DHParameterSpec"                -> "java.math.BigInteger";
   "javax.crypto.spec.DHParameterSpec"                -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.spec.DHPublicKeySpec"                -> "java.lang.Object";
   "javax.crypto.spec.DHPublicKeySpec"                -> "java.math.BigInteger";
   "javax.crypto.spec.DHPublicKeySpec"                -> "java.security.spec.KeySpec";
   "javax.crypto.spec.IvParameterSpec"                -> "java.lang.ArrayIndexOutOfBoundsException";
   "javax.crypto.spec.IvParameterSpec"                -> "java.lang.IllegalArgumentException";
   "javax.crypto.spec.IvParameterSpec"                -> "java.lang.Object";
   "javax.crypto.spec.IvParameterSpec"                -> "java.lang.String";
   "javax.crypto.spec.IvParameterSpec"                -> "java.lang.System";
   "javax.crypto.spec.IvParameterSpec"                -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.spec.PBEParameterSpec"               -> "java.lang.Object";
   "javax.crypto.spec.PBEParameterSpec"               -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.spec.RC2ParameterSpec"               -> "java.lang.IllegalArgumentException";
   "javax.crypto.spec.RC2ParameterSpec"               -> "java.lang.Object";
   "javax.crypto.spec.RC2ParameterSpec"               -> "java.lang.String";
   "javax.crypto.spec.RC2ParameterSpec"               -> "java.lang.System";
   "javax.crypto.spec.RC2ParameterSpec"               -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.spec.RC2ParameterSpec"               -> "java.util.Arrays";
   "javax.crypto.spec.RC5ParameterSpec"               -> "java.lang.IllegalArgumentException";
   "javax.crypto.spec.RC5ParameterSpec"               -> "java.lang.Object";
   "javax.crypto.spec.RC5ParameterSpec"               -> "java.lang.String";
   "javax.crypto.spec.RC5ParameterSpec"               -> "java.lang.System";
   "javax.crypto.spec.RC5ParameterSpec"               -> "java.security.spec.AlgorithmParameterSpec";
   "javax.crypto.spec.RC5ParameterSpec"               -> "java.util.Arrays";
   "javax.crypto.spec.SecretKeySpec"                  -> "java.lang.ArrayIndexOutOfBoundsException";
   "javax.crypto.spec.SecretKeySpec"                  -> "java.lang.IllegalArgumentException";
   "javax.crypto.spec.SecretKeySpec"                  -> "java.lang.Object";
   "javax.crypto.spec.SecretKeySpec"                  -> "java.lang.String";
   "javax.crypto.spec.SecretKeySpec"                  -> "java.lang.System";
   "javax.crypto.spec.SecretKeySpec"                  -> "java.security.MessageDigest";
   "javax.crypto.spec.SecretKeySpec"                  -> "java.security.spec.KeySpec";
   "javax.crypto.spec.SecretKeySpec"                  -> "java.util.Locale";
   "javax.crypto.spec.SecretKeySpec"                  -> "javax.crypto.SecretKey";
}
